$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module buffer_manager_testbench $end
  $var wire 32 5 BUFFER_SIZE [31:0] $end
  $var wire 32 6 DATA_WIDTH [31:0] $end
  $var wire 32 7 CLK_PERIOD [31:0] $end
  $var wire 1 4 clk $end
  $var wire 1 # rst_n $end
  $var wire 1 $ write_enable $end
  $var wire 1 % read_enable $end
  $var wire 8 & write_data [7:0] $end
  $var wire 8 ) read_data [7:0] $end
  $var wire 1 * buffer_full $end
  $var wire 1 + buffer_empty $end
  $var wire 3 , buffer_count [2:0] $end
  $scope module BUFFER_MANAGER_INSTANCE $end
   $var wire 32 5 BUFFER_SIZE [31:0] $end
   $var wire 32 6 DATA_WIDTH [31:0] $end
   $var wire 1 4 clk $end
   $var wire 1 # rst_n $end
   $var wire 1 $ write_enable $end
   $var wire 1 % read_enable $end
   $var wire 8 & write_data [7:0] $end
   $var wire 8 ) read_data [7:0] $end
   $var wire 1 * buffer_full $end
   $var wire 1 + buffer_empty $end
   $var wire 3 , buffer_count [2:0] $end
   $var wire 8 - buffer_memory[0] [7:0] $end
   $var wire 8 . buffer_memory[1] [7:0] $end
   $var wire 8 / buffer_memory[2] [7:0] $end
   $var wire 8 0 buffer_memory[3] [7:0] $end
   $var wire 2 1 write_pointer [1:0] $end
   $var wire 2 2 read_pointer [1:0] $end
   $var wire 3 , item_count [2:0] $end
   $scope module unnamedblk1 $end
    $var wire 32 3 i [31:0] $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk1 $end
   $var wire 32 ' i [31:0] $end
  $upscope $end
  $scope module unnamedblk2 $end
   $var wire 32 ( i [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
b00000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000 )
0*
1+
b000 ,
b00000000 -
b00000000 .
b00000000 /
b00000000 0
b00 1
b00 2
b00000000000000000000000000000000 3
04
b00000000000000000000000000000100 5
b00000000000000000000000000001000 6
b00000000000000000000000000001010 7
#5
b00000000000000000000000000000100 3
14
#10
04
#15
14
#20
1#
04
#25
14
#30
1$
b10100000 &
04
#35
0+
b001 ,
b10100000 -
b01 1
14
#40
0$
04
#45
14
#50
1$
b10100001 &
b00000000000000000000000000000001 '
04
#55
b010 ,
b10100001 .
b10 1
14
#60
0$
04
#65
14
#70
1$
b10100010 &
b00000000000000000000000000000010 '
04
#75
b011 ,
b10100010 /
b11 1
14
#80
0$
04
#85
14
#90
1$
b10100011 &
b00000000000000000000000000000011 '
04
#95
1*
b100 ,
b10100011 0
b00 1
14
#100
0$
04
#105
14
#110
1$
b11111111 &
b00000000000000000000000000000100 '
04
#115
14
#120
0$
04
#125
14
#130
1%
04
#135
b10100000 )
0*
b011 ,
b01 2
14
#140
0%
04
#145
14
#150
1%
b00000000000000000000000000000001 (
04
#155
b10100001 )
b010 ,
b10 2
14
#160
0%
04
#165
14
#170
1%
b00000000000000000000000000000010 (
04
#175
b10100010 )
b001 ,
b11 2
14
#180
0%
04
#185
14
#190
1%
b00000000000000000000000000000011 (
04
#195
b10100011 )
1+
b000 ,
b00 2
14
#200
0%
04
#205
14
#210
1%
b00000000000000000000000000000100 (
04
#215
14
#220
0%
04
#225
14
#230
1$
b10111011 &
04
#235
0+
b001 ,
b10111011 -
b01 1
14
#240
1%
b11001100 &
04
#245
b10111011 )
b11001100 .
b10 1
b01 2
14
#250
0$
0%
04
#255
14
#260
04
#265
14
#270
04
