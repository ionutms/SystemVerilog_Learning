$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module memory_access_testbench $end
  $var wire 3 , MEM_READ [2:0] $end
  $var wire 3 - MEM_WRITE [2:0] $end
  $var wire 3 . MEM_EXECUTE [2:0] $end
  $var wire 1 + clk $end
  $var wire 1 # reset_n $end
  $var wire 16 $ address [15:0] $end
  $var wire 32 % write_data [31:0] $end
  $var wire 3 & access_type [2:0] $end
  $var wire 1 ' access_enable $end
  $var wire 32 ( read_data [31:0] $end
  $var wire 1 ) access_valid $end
  $var wire 1 * access_error $end
  $scope module MEMORY_CONTROLLER_INST $end
   $var wire 32 / DATA_WIDTH [31:0] $end
   $var wire 32 0 ADDR_WIDTH [31:0] $end
   $var wire 1 + clk $end
   $var wire 1 # reset_n $end
   $var wire 16 $ address [15:0] $end
   $var wire 32 % write_data [31:0] $end
   $var wire 3 & access_type [2:0] $end
   $var wire 1 ' access_enable $end
   $var wire 32 ( read_data [31:0] $end
   $var wire 1 ) access_valid $end
   $var wire 1 * access_error $end
   $var wire 3 , MEM_READ [2:0] $end
   $var wire 3 - MEM_WRITE [2:0] $end
   $var wire 3 . MEM_EXECUTE [2:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b0000000000000000 $
b00000000000000000000000000000000 %
b001 &
0'
b00000000000000000000000000000000 (
0)
0*
0+
b001 ,
b010 -
b100 .
b00000000000000000000000000100000 /
b00000000000000000000000000010000 0
#5
1+
#10
0+
#15
1+
#20
1#
0+
#25
1+
#30
1'
0+
#35
0'
1+
#40
0+
#45
b0000000000000001 $
1'
b11001010111111101011101010111110 (
1)
1+
#50
0+
#55
0'
0)
1+
#60
0+
#65
b0000000100000000 $
b10101011110011010001001000110100 %
b010 &
1'
1)
1+
#70
0+
#75
0'
0)
1+
#80
0+
#85
b0000000100000001 $
b01010110011110001100110111101111 %
1'
1)
1+
#90
0+
#95
0'
0)
1+
#100
0+
#105
b0000000100000000 $
b00000000000000000000000000000000 %
b001 &
1'
b10101011110011010001001000110100 (
1)
1+
#110
0+
#115
0'
0)
1+
#120
0+
#125
b0000000100000001 $
1'
b01010110011110001100110111101111 (
1)
1+
#130
0+
#135
0'
0)
1+
#140
0+
#145
b0000000000000010 $
b100 &
1'
b00010010001101000101011001111000 (
1)
1+
#150
0+
#155
0'
0)
1+
#160
0+
#165
b0000000000000011 $
1'
b10011010101111001101111011110000 (
1)
1+
#170
0+
#175
0'
0)
1+
#180
0+
#185
b0000000000000000 $
b111 &
1'
1*
1+
#190
0+
#195
0'
0*
1+
#200
0+
#205
1+
#210
0+
#215
1+
#220
0+
#225
1+
#230
0+
#235
1+
#240
0+
#245
1+
#250
0+
#255
1+
