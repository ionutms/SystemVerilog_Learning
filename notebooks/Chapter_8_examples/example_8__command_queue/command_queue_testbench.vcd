$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module command_queue_testbench $end
  $var wire 1 A test_clock $end
  $var wire 1 # test_reset_n $end
  $var wire 1 $ test_push_front_enable $end
  $var wire 1 % test_push_back_enable $end
  $var wire 1 & test_pop_enable $end
  $var wire 64 ' test_command_data_in [63:0] $end
  $var wire 64 ) test_command_data_out [63:0] $end
  $var wire 1 + test_queue_empty $end
  $var wire 1 , test_queue_full $end
  $scope module COMMAND_QUEUE_INSTANCE $end
   $var wire 32 B QUEUE_DEPTH [31:0] $end
   $var wire 32 C CMD_WIDTH [31:0] $end
   $var wire 1 A clock $end
   $var wire 1 # reset_n $end
   $var wire 1 $ push_front_enable $end
   $var wire 1 % push_back_enable $end
   $var wire 1 & pop_enable $end
   $var wire 64 ' command_data_in [63:0] $end
   $var wire 64 ) command_data_out [63:0] $end
   $var wire 1 + queue_empty $end
   $var wire 1 , queue_full $end
   $var wire 64 - command_queue[0] [63:0] $end
   $var wire 64 / command_queue[1] [63:0] $end
   $var wire 64 1 command_queue[2] [63:0] $end
   $var wire 64 3 command_queue[3] [63:0] $end
   $var wire 64 5 command_queue[4] [63:0] $end
   $var wire 64 7 command_queue[5] [63:0] $end
   $var wire 64 9 command_queue[6] [63:0] $end
   $var wire 64 ; command_queue[7] [63:0] $end
   $var wire 3 = front_pointer [2:0] $end
   $var wire 3 > back_pointer [2:0] $end
   $var wire 4 ? queue_count [3:0] $end
   $scope module unnamedblk1 $end
    $var wire 32 @ i [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
b0000000000000000000000000000000000000000000000000000000000000000 '
b0000000000000000000000000000000000000000000000000000000000000000 )
1+
0,
b0000000000000000000000000000000000000000000000000000000000000000 -
b0000000000000000000000000000000000000000000000000000000000000000 /
b0000000000000000000000000000000000000000000000000000000000000000 1
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 5
b0000000000000000000000000000000000000000000000000000000000000000 7
b0000000000000000000000000000000000000000000000000000000000000000 9
b0000000000000000000000000000000000000000000000000000000000000000 ;
b000 =
b000 >
b0000 ?
b00000000000000000000000000000000 @
0A
b00000000000000000000000000001000 B
b00000000000000000000000001000000 C
#5
b00000000000000000000000000001000 @
1A
#10
0A
#15
1A
#20
1#
0A
#25
1A
#30
1%
b0100110101001111010101100100010100000000000000000000000000000000 '
0A
#35
b0101010001110101011100100110111000000000000000000000000000000000 '
b0101010001110101011100100110111000000000000000000000000000000000 )
0+
b0101010001110101011100100110111000000000000000000000000000000000 -
b001 >
b0001 ?
1A
#40
0A
#45
b0101001101110100011011110111000000000000000000000000000000000000 '
b0101001101110100011011110111000000000000000000000000000000000000 /
b010 >
b0010 ?
1A
#50
0A
#55
0%
b0000000000000000000000000000000000000000000000000000000000000000 '
1A
#60
0A
#65
1&
b0101001101110100011011110111000000000000000000000000000000000000 )
b001 =
b0001 ?
1A
#70
0A
#75
b0000000000000000000000000000000000000000000000000000000000000000 )
1+
b010 =
b0000 ?
1A
#80
0A
#85
0&
1A
#90
0A
#95
1%
b0101001101101100011011110111011100000000000000000000000000000000 '
b0101001101101100011011110111011100000000000000000000000000000000 )
0+
b0101001101101100011011110111011100000000000000000000000000000000 1
b011 >
b0001 ?
1A
#100
0A
#105
1$
0%
b0100001001110010011000010110101101100101000000000000000000000000 '
b0100001001110010011000010110101101100101000000000000000000000000 )
b0100001001110010011000010110101101100101000000000000000000000000 /
b001 =
b0010 ?
1A
#110
0A
#115
b0101010101010010010001110100010101001110010101000000000000000000 '
b0101010101010010010001110100010101001110010101000000000000000000 )
b0101010101010010010001110100010101001110010101000000000000000000 -
b000 =
b0011 ?
1A
#120
0A
#125
0$
b0000000000000000000000000000000000000000000000000000000000000000 '
1A
#130
0A
#135
1&
b0100001001110010011000010110101101100101000000000000000000000000 )
b001 =
b0010 ?
1A
#140
0A
#145
b0101001101101100011011110111011100000000000000000000000000000000 )
b010 =
b0001 ?
1A
#150
0A
#155
b0000000000000000000000000000000000000000000000000000000000000000 )
1+
b011 =
b0000 ?
1A
#160
0A
#165
0&
1A
#170
0A
#175
1%
b0100011001010101010011000100110000000000000000000000000000000000 '
b0100011001010101010011000100110000000000000000000000000000000000 )
0+
b0100011001010101010011000100110000000000000000000000000000000000 3
b100 >
b0001 ?
1A
#180
0A
#185
b0100011001010101010011000100110000000000000000000000000000000000 5
b101 >
b0010 ?
1A
#190
0A
#195
b0100011001010101010011000100110000000000000000000000000000000000 7
b110 >
b0011 ?
1A
#200
0A
#205
b0100011001010101010011000100110000000000000000000000000000000000 9
b111 >
b0100 ?
1A
#210
0A
#215
b0100011001010101010011000100110000000000000000000000000000000000 ;
b000 >
b0101 ?
1A
#220
0A
#225
b0100011001010101010011000100110000000000000000000000000000000000 -
b001 >
b0110 ?
1A
#230
0A
#235
b0100011001010101010011000100110000000000000000000000000000000000 /
b010 >
b0111 ?
1A
#240
0A
#245
1,
b0100011001010101010011000100110000000000000000000000000000000000 1
b011 >
b1000 ?
1A
#250
0A
#255
0%
b0000000000000000000000000000000000000000000000000000000000000000 '
1A
#260
0A
#265
1&
0,
b100 =
b0111 ?
1A
#270
0A
#275
b101 =
b0110 ?
1A
#280
0A
#285
b110 =
b0101 ?
1A
#290
0A
#295
b111 =
b0100 ?
1A
#300
0A
#305
b000 =
b0011 ?
1A
#310
0A
#315
b001 =
b0010 ?
1A
#320
0A
#325
b010 =
b0001 ?
1A
#330
0A
#335
b0000000000000000000000000000000000000000000000000000000000000000 )
1+
b011 =
b0000 ?
1A
#340
0A
#345
0&
1A
#350
0A
#355
1A
#360
0A
#365
1A
