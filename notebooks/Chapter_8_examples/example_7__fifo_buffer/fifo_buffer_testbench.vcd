$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module fifo_buffer_testbench $end
  $var wire 1 - clock_signal $end
  $var wire 1 . reset_signal $end
  $var wire 1 / push_enable $end
  $var wire 1 0 pop_enable $end
  $var wire 8 1 data_input [7:0] $end
  $var wire 8 # data_output [7:0] $end
  $var wire 1 $ fifo_empty_flag $end
  $var wire 1 % fifo_full_flag $end
  $scope module FIFO_BUFFER_INSTANCE $end
   $var wire 32 2 DATA_WIDTH [31:0] $end
   $var wire 32 3 FIFO_DEPTH [31:0] $end
   $var wire 1 - clock_signal $end
   $var wire 1 . reset_signal $end
   $var wire 1 / push_enable $end
   $var wire 1 0 pop_enable $end
   $var wire 8 1 data_input [7:0] $end
   $var wire 8 # data_output [7:0] $end
   $var wire 1 $ fifo_empty_flag $end
   $var wire 1 % fifo_full_flag $end
   $var wire 8 & fifo_memory[0] [7:0] $end
   $var wire 8 ' fifo_memory[1] [7:0] $end
   $var wire 8 ( fifo_memory[2] [7:0] $end
   $var wire 8 ) fifo_memory[3] [7:0] $end
   $var wire 3 * write_pointer [2:0] $end
   $var wire 3 + read_pointer [2:0] $end
   $var wire 3 , data_count [2:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000 #
1$
0%
b00000000 &
b00000000 '
b00000000 (
b00000000 )
b000 *
b000 +
b000 ,
0-
1.
0/
00
b00000000 1
b00000000000000000000000000001000 2
b00000000000000000000000000000100 3
#5
1-
#10
0-
0.
#15
1-
#20
0-
1/
b10101010 1
#25
b10101010 #
0$
b10101010 &
b001 *
b001 ,
1-
#30
0-
0/
#35
1-
#40
0-
1/
b10111011 1
#45
b10111011 '
b010 *
b010 ,
1-
#50
0-
0/
#55
1-
#60
0-
1/
b11001100 1
#65
b11001100 (
b011 *
b011 ,
1-
#70
0-
0/
#75
1-
#80
0-
1/
b11011101 1
#85
1%
b11011101 )
b100 *
b100 ,
1-
#90
0-
0/
#95
1-
#100
0-
1/
b11101110 1
#105
1-
#110
0-
0/
#115
1-
#120
0-
10
#125
b10111011 #
0%
b001 +
b011 ,
1-
#130
0-
00
#135
1-
#140
0-
10
#145
b11001100 #
b010 +
b010 ,
1-
#150
0-
00
#155
1-
#160
0-
10
#165
b11011101 #
b011 +
b001 ,
1-
#170
0-
00
#175
1-
#180
0-
10
#185
b10101010 #
1$
b100 +
b000 ,
1-
#190
0-
00
#195
1-
#200
0-
10
#205
1-
#210
0-
00
#215
1-
#220
0-
1/
b00010001 1
#225
b00010001 #
0$
b00010001 &
b101 *
b001 ,
1-
#230
0-
0/
#235
1-
#240
0-
1/
b00100010 1
#245
b00100010 '
b110 *
b010 ,
1-
#250
0-
0/
#255
1-
#260
0-
10
#265
b00100010 #
b101 +
b001 ,
1-
#270
0-
00
#275
1-
#280
0-
1/
b00110011 1
#285
b00110011 (
b111 *
b010 ,
1-
#290
0-
0/
#295
1-
#300
0-
10
#305
b00110011 #
b110 +
b001 ,
1-
#310
0-
00
#315
1-
#320
0-
10
#325
b11011101 #
1$
b111 +
b000 ,
1-
#330
0-
00
#335
1-
#340
0-
#345
1-
#350
0-
#355
1-
#360
0-
