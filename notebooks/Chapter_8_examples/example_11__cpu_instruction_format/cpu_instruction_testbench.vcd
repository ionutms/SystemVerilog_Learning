$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module cpu_instruction_testbench $end
  $var wire 16 * test_instruction_sequence[0] [15:0] $end
  $var wire 16 + test_instruction_sequence[1] [15:0] $end
  $var wire 16 , test_instruction_sequence[2] [15:0] $end
  $var wire 16 - raw_instruction_bits [15:0] $end
  $scope module CPU_DECODER_INSTANCE $end
   $var wire 16 # current_instruction [15:0] $end
   $var wire 16 $ sample_instructions[0] [15:0] $end
   $var wire 16 % sample_instructions[1] [15:0] $end
   $var wire 16 & sample_instructions[2] [15:0] $end
   $var wire 16 ' sample_instructions[3] [15:0] $end
   $var wire 16 ( sample_instructions[4] [15:0] $end
   $scope module unnamedblk1 $end
    $var wire 32 ) instruction_index [31:0] $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk1 $end
   $var wire 32 . test_index [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b1111000000000000 #
b0001010000100001 $
b0011000000000010 %
b0010010100000010 &
b0101000100000000 '
b1111000000000000 (
b00000000000000000000000000000101 )
b0000000000000000 *
b0000000000000000 +
b0000000000000000 ,
b0000000000000000 -
b00000000000000000000000000000000 .
#1
b0011011111111000 *
b1010010101010101 +
b0101101010101010 ,
b0101101010101010 -
b00000000000000000000000000000011 .
