$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module array_port_module_testbench $end
  $var wire 32 n CLK_PERIOD [31:0] $end
  $var wire 32 o TB_DATA_WIDTH [31:0] $end
  $var wire 32 p TB_NUM_CHANNELS [31:0] $end
  $var wire 1 k clk $end
  $var wire 1 # reset_n $end
  $var wire 1 $ enable $end
  $var wire 8 % data_in[0] [7:0] $end
  $var wire 8 & data_in[1] [7:0] $end
  $var wire 8 ' data_in[2] [7:0] $end
  $var wire 8 ( data_in[3] [7:0] $end
  $var wire 1 ) valid_in[0] $end
  $var wire 1 * valid_in[1] $end
  $var wire 1 + valid_in[2] $end
  $var wire 1 , valid_in[3] $end
  $var wire 8 < data_out[0] [7:0] $end
  $var wire 8 = data_out[1] [7:0] $end
  $var wire 8 > data_out[2] [7:0] $end
  $var wire 8 ? data_out[3] [7:0] $end
  $var wire 1 @ valid_out[0] $end
  $var wire 1 A valid_out[1] $end
  $var wire 1 B valid_out[2] $end
  $var wire 1 C valid_out[3] $end
  $var wire 8 D channel_count[0] [7:0] $end
  $var wire 8 E channel_count[1] [7:0] $end
  $var wire 8 F channel_count[2] [7:0] $end
  $var wire 8 G channel_count[3] [7:0] $end
  $var wire 8 H channel_max[0] [7:0] $end
  $var wire 8 I channel_max[1] [7:0] $end
  $var wire 8 J channel_max[2] [7:0] $end
  $var wire 8 K channel_max[3] [7:0] $end
  $var wire 8 L channel_min[0] [7:0] $end
  $var wire 8 M channel_min[1] [7:0] $end
  $var wire 8 N channel_min[2] [7:0] $end
  $var wire 8 O channel_min[3] [7:0] $end
  $var wire 8 P sum_outputs [7:0] $end
  $var wire 8 Q max_output [7:0] $end
  $var wire 32 R valid_output_count [31:0] $end
  $var wire 8 - test_val [7:0] $end
  $scope module dut $end
   $var wire 32 o DATA_WIDTH [31:0] $end
   $var wire 32 p NUM_CHANNELS [31:0] $end
   $var wire 1 k clk $end
   $var wire 1 # reset_n $end
   $var wire 1 $ enable $end
   $var wire 8 % data_in[0] [7:0] $end
   $var wire 8 & data_in[1] [7:0] $end
   $var wire 8 ' data_in[2] [7:0] $end
   $var wire 8 ( data_in[3] [7:0] $end
   $var wire 1 ) valid_in[0] $end
   $var wire 1 * valid_in[1] $end
   $var wire 1 + valid_in[2] $end
   $var wire 1 , valid_in[3] $end
   $var wire 8 < data_out[0] [7:0] $end
   $var wire 8 = data_out[1] [7:0] $end
   $var wire 8 > data_out[2] [7:0] $end
   $var wire 8 ? data_out[3] [7:0] $end
   $var wire 1 @ valid_out[0] $end
   $var wire 1 A valid_out[1] $end
   $var wire 1 B valid_out[2] $end
   $var wire 1 C valid_out[3] $end
   $var wire 8 D channel_count[0] [7:0] $end
   $var wire 8 E channel_count[1] [7:0] $end
   $var wire 8 F channel_count[2] [7:0] $end
   $var wire 8 G channel_count[3] [7:0] $end
   $var wire 8 H channel_max[0] [7:0] $end
   $var wire 8 I channel_max[1] [7:0] $end
   $var wire 8 J channel_max[2] [7:0] $end
   $var wire 8 K channel_max[3] [7:0] $end
   $var wire 8 L channel_min[0] [7:0] $end
   $var wire 8 M channel_min[1] [7:0] $end
   $var wire 8 N channel_min[2] [7:0] $end
   $var wire 8 O channel_min[3] [7:0] $end
   $var wire 8 S sum_all_channels [7:0] $end
   $var wire 3 T active_channels [2:0] $end
   $var wire 8 U highest_value [7:0] $end
   $var wire 2 V highest_channel [1:0] $end
   $scope module channel_proc[0] $end
    $var wire 8 W data_reg [7:0] $end
    $var wire 1 X valid_reg $end
    $var wire 8 Y counter [7:0] $end
    $var wire 8 Z max_val [7:0] $end
    $var wire 8 [ min_val [7:0] $end
   $upscope $end
   $scope module channel_proc[1] $end
    $var wire 8 \ data_reg [7:0] $end
    $var wire 1 ] valid_reg $end
    $var wire 8 ^ counter [7:0] $end
    $var wire 8 _ max_val [7:0] $end
    $var wire 8 ` min_val [7:0] $end
   $upscope $end
   $scope module channel_proc[2] $end
    $var wire 8 a data_reg [7:0] $end
    $var wire 1 b valid_reg $end
    $var wire 8 c counter [7:0] $end
    $var wire 8 d max_val [7:0] $end
    $var wire 8 e min_val [7:0] $end
   $upscope $end
   $scope module channel_proc[3] $end
    $var wire 8 f data_reg [7:0] $end
    $var wire 1 g valid_reg $end
    $var wire 8 h counter [7:0] $end
    $var wire 8 i max_val [7:0] $end
    $var wire 8 j min_val [7:0] $end
   $upscope $end
   $scope module unnamedblk1 $end
    $var wire 32 q i [31:0] $end
   $upscope $end
   $scope module unnamedblk2 $end
    $var wire 32 q i [31:0] $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk10 $end
   $var wire 32 . burst [31:0] $end
   $scope module unnamedblk11 $end
    $var wire 32 / ch [31:0] $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk12 $end
   $var wire 32 0 cycle [31:0] $end
   $scope module unnamedblk13 $end
    $var wire 32 1 ch [31:0] $end
    $scope module unnamedblk14 $end
     $var wire 1 2 valid $end
    $upscope $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk15 $end
   $var wire 32 3 i [31:0] $end
  $upscope $end
  $scope module unnamedblk16 $end
   $var wire 32 l active_count [31:0] $end
   $scope module unnamedblk17 $end
    $var wire 32 m i [31:0] $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk18 $end
   $var wire 32 q i [31:0] $end
  $upscope $end
  $scope module unnamedblk2 $end
   $var wire 32 4 i [31:0] $end
  $upscope $end
  $scope module unnamedblk3 $end
   $var wire 32 5 cycle [31:0] $end
   $scope module unnamedblk4 $end
    $var wire 32 6 ch [31:0] $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk5 $end
   $var wire 32 7 i [31:0] $end
  $upscope $end
  $scope module unnamedblk6 $end
   $var wire 32 8 i [31:0] $end
  $upscope $end
  $scope module unnamedblk7 $end
   $var wire 32 9 cycle [31:0] $end
   $scope module unnamedblk8 $end
    $var wire 32 : ch [31:0] $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk9 $end
   $var wire 32 ; ch [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00000000 %
b00000000 &
b00000000 '
b00000000 (
0)
0*
0+
0,
b00000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
02
b00000000000000000000000000000000 3
b00000000000000000000000000000100 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000 <
b00000000 =
b00000000 >
b00000000 ?
0@
0A
0B
0C
b00000000 D
b00000000 E
b00000000 F
b00000000 G
b00000000 H
b00000000 I
b00000000 J
b00000000 K
b00000000 L
b00000000 M
b00000000 N
b00000000 O
b00000000 P
b00000000 Q
b00000000000000000000000000000000 R
b00000000 S
b000 T
b00000000 U
b00 V
b00000000 W
0X
b00000000 Y
b00000000 Z
b00000000 [
b00000000 \
0]
b00000000 ^
b00000000 _
b00000000 `
b00000000 a
0b
b00000000 c
b00000000 d
b00000000 e
b00000000 f
0g
b00000000 h
b00000000 i
b00000000 j
0k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000001010 n
b00000000000000000000000000001000 o
b00000000000000000000000000000100 p
b00000000000000000000000000000100 q
#5
b11111111 L
b11111111 M
b11111111 N
b11111111 O
b11111111 [
b11111111 `
b11111111 e
b11111111 j
1k
#10
0k
#15
1k
#20
1#
1$
0k
#25
1k
b00000000000000000000000000000100 m
#30
b00000101 &
b00001010 '
b00001111 (
1)
1*
1+
1,
b00000000000000000000000000000100 6
0k
#35
b00000101 =
b00001010 >
b00001111 ?
1@
1A
1B
1C
b00000001 D
b00000001 E
b00000001 F
b00000001 G
b00000101 I
b00001010 J
b00001111 K
b00000000 L
b00000101 M
b00001010 N
b00001111 O
b00011110 P
b00001111 Q
b00000000000000000000000000000100 R
b00011110 S
b100 T
b00001111 U
b11 V
1X
b00000001 Y
b00000000 [
b00000101 \
1]
b00000001 ^
b00000101 _
b00000101 `
b00001010 a
1b
b00000001 c
b00001010 d
b00001010 e
b00001111 f
1g
b00000001 h
b00001111 i
b00001111 j
1k
b00000000000000000000000000000100 l
#40
b00010100 %
b00011001 &
b00011110 '
b00100011 (
b00000000000000000000000000000001 5
0k
#45
b00010100 <
b00011001 =
b00011110 >
b00100011 ?
b00000010 D
b00000010 E
b00000010 F
b00000010 G
b00010100 H
b00011001 I
b00011110 J
b00100011 K
b01101110 P
b00100011 Q
b01101110 S
b00100011 U
b00010100 W
b00000010 Y
b00010100 Z
b00011001 \
b00000010 ^
b00011001 _
b00011110 a
b00000010 c
b00011110 d
b00100011 f
b00000010 h
b00100011 i
1k
#50
b00101000 %
b00101101 &
b00110010 '
b00110111 (
b00000000000000000000000000000010 5
0k
#55
b00101000 <
b00101101 =
b00110010 >
b00110111 ?
b00000011 D
b00000011 E
b00000011 F
b00000011 G
b00101000 H
b00101101 I
b00110010 J
b00110111 K
b10111110 P
b00110111 Q
b10111110 S
b00110111 U
b00101000 W
b00000011 Y
b00101000 Z
b00101101 \
b00000011 ^
b00101101 _
b00110010 a
b00000011 c
b00110010 d
b00110111 f
b00000011 h
b00110111 i
1k
#60
b00111100 %
b01000001 &
b01000110 '
b01001011 (
b00000000000000000000000000000011 5
0k
#65
b00111100 <
b01000001 =
b01000110 >
b01001011 ?
b00000100 D
b00000100 E
b00000100 F
b00000100 G
b00111100 H
b01000001 I
b01000110 J
b01001011 K
b00001110 P
b01001011 Q
b00001110 S
b01001011 U
b00111100 W
b00000100 Y
b00111100 Z
b01000001 \
b00000100 ^
b01000001 _
b01000110 a
b00000100 c
b01000110 d
b01001011 f
b00000100 h
b01001011 i
1k
#70
b01010000 %
b01010101 &
b01011010 '
b01011111 (
b00000000000000000000000000000100 5
0k
#75
b01010000 <
b01010101 =
b01011010 >
b01011111 ?
b00000101 D
b00000101 E
b00000101 F
b00000101 G
b01010000 H
b01010101 I
b01011010 J
b01011111 K
b01011110 P
b01011111 Q
b01011110 S
b01011111 U
b01010000 W
b00000101 Y
b01010000 Z
b01010101 \
b00000101 ^
b01010101 _
b01011010 a
b00000101 c
b01011010 d
b01011111 f
b00000101 h
b01011111 i
1k
#80
0)
0*
0+
0,
b00000000000000000000000000000101 5
b00000000000000000000000000000100 7
0k
#85
0@
0A
0B
0C
b00000000 P
b00000000 Q
b00000000000000000000000000000000 R
b00000000 S
b000 T
b00000000 U
b00 V
0X
0]
0b
0g
1k
b00000000000000000000000000000000 l
#90
b10010110 %
b11001000 '
1)
1+
0k
#95
b10010110 <
b11001000 >
1@
1B
b00000110 D
b00000110 F
b10010110 H
b11001000 J
b01011110 P
b11001000 Q
b00000000000000000000000000000010 R
b01011110 S
b010 T
b11001000 U
b10 V
b10010110 W
1X
b00000110 Y
b10010110 Z
b11001000 a
1b
b00000110 c
b11001000 d
1k
b00000000000000000000000000000010 l
#100
b01001011 &
b11111010 (
0)
1*
0+
1,
b00000000000000000000000000000100 8
0k
#105
b01001011 =
b11111010 ?
0@
1A
0B
1C
b00000110 E
b00000110 G
b11111010 K
b01000101 P
b11111010 Q
b01000101 S
b11111010 U
b11 V
0X
b01001011 \
1]
b00000110 ^
0b
b11111010 f
1g
b00000110 h
b11111010 i
1k
#110
b00110010 %
b00110010 &
b00110010 '
b00110010 (
1)
1+
b00110010 -
b00000000000000000000000000000100 :
0k
#115
b00110010 <
b00110010 =
b00110010 >
b00110010 ?
1@
1B
b00000111 D
b00000111 E
b00000111 F
b00000111 G
b11001000 P
b00110010 Q
b00000000000000000000000000000100 R
b11001000 S
b100 T
b00110010 U
b00 V
b00110010 W
1X
b00000111 Y
b00110010 \
b00000111 ^
b00110010 a
1b
b00000111 c
b00110010 f
b00000111 h
1k
b00000000000000000000000000000100 l
#120
b11001000 %
b11001000 &
b11001000 '
b11001000 (
b11001000 -
b00000000000000000000000000000001 9
0k
#125
b11001000 <
b11001000 =
b11001000 >
b11001000 ?
b00001000 D
b00001000 E
b00001000 F
b00001000 G
b11001000 H
b11001000 I
b00100000 P
b11001000 Q
b00100000 S
b11001000 U
b11001000 W
b00001000 Y
b11001000 Z
b11001000 \
b00001000 ^
b11001000 _
b11001000 a
b00001000 c
b11001000 f
b00001000 h
1k
#130
b00001010 %
b00001010 &
b00001010 '
b00001010 (
b00001010 -
b00000000000000000000000000000010 9
0k
#135
b00001010 <
b00001010 =
b00001010 >
b00001010 ?
b00001001 D
b00001001 E
b00001001 F
b00001001 G
b00001010 O
b00101000 P
b00001010 Q
b00101000 S
b00001010 U
b00001010 W
b00001001 Y
b00001010 \
b00001001 ^
b00001010 a
b00001001 c
b00001010 f
b00001001 h
b00001010 j
1k
#140
b11110000 %
b11110000 &
b11110000 '
b11110000 (
b11110000 -
b00000000000000000000000000000011 9
0k
#145
b11110000 <
b11110000 =
b11110000 >
b11110000 ?
b00001010 D
b00001010 E
b00001010 F
b00001010 G
b11110000 H
b11110000 I
b11110000 J
b11000000 P
b11110000 Q
b11000000 S
b11110000 U
b11110000 W
b00001010 Y
b11110000 Z
b11110000 \
b00001010 ^
b11110000 _
b11110000 a
b00001010 c
b11110000 d
b11110000 f
b00001010 h
1k
#150
b00011110 %
b00011110 &
b00011110 '
b00011110 (
b00011110 -
b00000000000000000000000000000100 9
0k
#155
b00011110 <
b00011110 =
b00011110 >
b00011110 ?
b00001011 D
b00001011 E
b00001011 F
b00001011 G
b01111000 P
b00011110 Q
b01111000 S
b00011110 U
b00011110 W
b00001011 Y
b00011110 \
b00001011 ^
b00011110 a
b00001011 c
b00011110 f
b00001011 h
1k
#160
0$
b01100100 %
b01100100 &
b01100100 '
b01100100 (
b00000000000000000000000000000101 9
b00000000000000000000000000000100 ;
0k
#165
1k
#170
0k
#175
1k
#180
1$
0k
#185
b01100100 <
b01100100 =
b01100100 >
b01100100 ?
b00001100 D
b00001100 E
b00001100 F
b00001100 G
b10010000 P
b01100100 Q
b10010000 S
b01100100 U
b01100100 W
b00001100 Y
b01100100 \
b00001100 ^
b01100100 a
b00001100 c
b01100100 f
b00001100 h
1k
#190
b00000000 %
b00001010 &
b00010100 '
b00011110 (
b00000000000000000000000000000100 /
0k
#195
b00000000 <
b00001010 =
b00010100 >
b00011110 ?
b00001101 D
b00001101 E
b00001101 F
b00001101 G
b00111100 P
b00011110 Q
b00111100 S
b00011110 U
b11 V
b00000000 W
b00001101 Y
b00001010 \
b00001101 ^
b00010100 a
b00001101 c
b00011110 f
b00001101 h
1k
#200
b00110010 %
b00111100 &
b01000110 '
b01010000 (
b00000000000000000000000000000001 .
0k
#205
b00110010 <
b00111100 =
b01000110 >
b01010000 ?
b00001110 D
b00001110 E
b00001110 F
b00001110 G
b00000100 P
b01010000 Q
b00000100 S
b01010000 U
b00110010 W
b00001110 Y
b00111100 \
b00001110 ^
b01000110 a
b00001110 c
b01010000 f
b00001110 h
1k
#210
b01100100 %
b01101110 &
b01111000 '
b10000010 (
b00000000000000000000000000000010 .
0k
#215
b01100100 <
b01101110 =
b01111000 >
b10000010 ?
b00001111 D
b00001111 E
b00001111 F
b00001111 G
b11001100 P
b10000010 Q
b11001100 S
b10000010 U
b01100100 W
b00001111 Y
b01101110 \
b00001111 ^
b01111000 a
b00001111 c
b10000010 f
b00001111 h
1k
#220
b00000000 %
b00000001 &
b00000010 '
b00000011 (
0)
0+
b00000000000000000000000000000011 .
b00000000000000000000000000000100 1
12
0k
#225
b00000000 <
b00000001 =
b00000010 >
b00000011 ?
0@
0B
b00010000 E
b00010000 G
b00000001 M
b00000011 O
b00000100 P
b00000011 Q
b00000000000000000000000000000010 R
b00000100 S
b010 T
b00000011 U
b00000000 W
0X
b00000001 \
b00010000 ^
b00000001 `
b00000010 a
0b
b00000011 f
b00010000 h
b00000011 j
1k
b00000000000000000000000000000010 l
#230
b00011110 %
b00011111 &
b00100000 '
b00100001 (
1)
0*
1+
0,
b00000000000000000000000000000001 0
02
0k
#235
b00011110 <
b00011111 =
b00100000 >
b00100001 ?
1@
0A
1B
0C
b00010000 D
b00010000 F
b00111110 P
b00100000 Q
b00111110 S
b00100000 U
b10 V
b00011110 W
1X
b00010000 Y
b00011111 \
0]
b00100000 a
1b
b00010000 c
b00100001 f
0g
1k
#240
b00111100 %
b00111101 &
b00111110 '
b00111111 (
0)
1*
0+
1,
b00000000000000000000000000000010 0
12
0k
#245
b00111100 <
b00111101 =
b00111110 >
b00111111 ?
0@
1A
0B
1C
b00010001 E
b00010001 G
b01111100 P
b00111111 Q
b01111100 S
b00111111 U
b11 V
b00111100 W
0X
b00111101 \
1]
b00010001 ^
b00111110 a
0b
b00111111 f
1g
b00010001 h
1k
#250
b01011010 %
b01011011 &
b01011100 '
b01011101 (
1)
0*
1+
0,
b00000000000000000000000000000011 0
02
0k
#255
b01011010 <
b01011011 =
b01011100 >
b01011101 ?
1@
0A
1B
0C
b00010001 D
b00010001 F
b10110110 P
b01011100 Q
b10110110 S
b01011100 U
b10 V
b01011010 W
1X
b00010001 Y
b01011011 \
0]
b01011100 a
1b
b00010001 c
b01011101 f
0g
1k
#260
0)
0+
b00000000000000000000000000000100 0
b00000000000000000000000000000100 3
0k
#265
0@
0B
b00000000 P
b00000000 Q
b00000000000000000000000000000000 R
b00000000 S
b000 T
b00000000 U
b00 V
0X
0b
1k
b00000000000000000000000000000000 l
#270
0k
