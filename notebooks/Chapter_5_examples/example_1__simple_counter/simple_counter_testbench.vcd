$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module simple_counter_testbench $end
  $var wire 32 1 CLK_PERIOD [31:0] $end
  $var wire 32 2 TEST_WIDTH [31:0] $end
  $var wire 32 3 TEST_MAX [31:0] $end
  $var wire 1 0 clk $end
  $var wire 1 # reset_n $end
  $var wire 1 $ enable $end
  $var wire 1 % load $end
  $var wire 4 & load_value [3:0] $end
  $var wire 1 ' count_up $end
  $var wire 4 , count [3:0] $end
  $var wire 1 - overflow $end
  $var wire 1 . underflow $end
  $var wire 1 / max_reached $end
  $var wire 8 ( count2 [7:0] $end
  $var wire 1 ) overflow2 $end
  $var wire 1 * underflow2 $end
  $var wire 1 + max_reached2 $end
  $scope module dut $end
   $var wire 32 2 WIDTH [31:0] $end
   $var wire 32 3 MAX_COUNT [31:0] $end
   $var wire 1 4 WRAP_AROUND $end
   $var wire 32 5 RESET_VALUE [31:0] $end
   $var wire 1 0 clk $end
   $var wire 1 # reset_n $end
   $var wire 1 $ enable $end
   $var wire 1 % load $end
   $var wire 4 & load_value [3:0] $end
   $var wire 1 ' count_up $end
   $var wire 4 , count [3:0] $end
   $var wire 1 - overflow $end
   $var wire 1 . underflow $end
   $var wire 1 / max_reached $end
   $var wire 4 , count_reg [3:0] $end
   $var wire 4 6 MIN_COUNT [3:0] $end
   $var wire 4 7 MAX_VAL [3:0] $end
   $var wire 4 6 RESET_VAL [3:0] $end
  $upscope $end
  $scope module dut2 $end
   $var wire 32 8 WIDTH [31:0] $end
   $var wire 32 9 MAX_COUNT [31:0] $end
   $var wire 1 : WRAP_AROUND $end
   $var wire 32 ; RESET_VALUE [31:0] $end
   $var wire 1 0 clk $end
   $var wire 1 # reset_n $end
   $var wire 1 $ enable $end
   $var wire 1 < load $end
   $var wire 8 = load_value [7:0] $end
   $var wire 1 ' count_up $end
   $var wire 8 ( count [7:0] $end
   $var wire 1 ) overflow $end
   $var wire 1 * underflow $end
   $var wire 1 + max_reached $end
   $var wire 8 ( count_reg [7:0] $end
   $var wire 8 = MIN_COUNT [7:0] $end
   $var wire 8 > MAX_VAL [7:0] $end
   $var wire 8 ? RESET_VAL [7:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
b0000 &
1'
b00000000 (
0)
0*
0+
b0000 ,
0-
0.
0/
00
b00000000000000000000000000001010 1
b00000000000000000000000000000100 2
b00000000000000000000000000001100 3
14
b00000000000000000000000000000000 5
b0000 6
b1100 7
b00000000000000000000000000001000 8
b00000000000000000000000011111111 9
0:
b00000000000000000000000010000000 ;
0<
b00000000 =
b11111111 >
b10000000 ?
#5
b10000000 (
10
#10
00
#15
10
#20
1#
00
#25
10
#30
1$
00
#35
b10000001 (
b0001 ,
10
#40
00
#45
b10000010 (
b0010 ,
10
#50
00
#55
b10000011 (
b0011 ,
10
#60
00
#65
b10000100 (
b0100 ,
10
#70
00
#75
b10000101 (
b0101 ,
10
#80
00
#85
b10000110 (
b0110 ,
10
#90
00
#95
b10000111 (
b0111 ,
10
#100
00
#105
b10001000 (
b1000 ,
10
#110
00
#115
b10001001 (
b1001 ,
10
#120
00
#125
b10001010 (
b1010 ,
10
#130
00
#135
b10001011 (
b1011 ,
10
#140
00
#145
b10001100 (
b1100 ,
1/
10
#150
00
#155
b10001101 (
b0000 ,
1-
0/
10
#160
00
#165
b10001110 (
b0001 ,
0-
10
#170
00
#175
b10001111 (
b0010 ,
10
#180
0'
00
#185
b10001110 (
b0001 ,
10
#190
00
#195
b10001101 (
b0000 ,
10
#200
00
#205
b10001100 (
b1100 ,
1.
1/
10
#210
00
#215
b10001011 (
b1011 ,
0.
0/
10
#220
00
#225
b10001010 (
b1010 ,
10
#230
00
#235
b10001001 (
b1001 ,
10
#240
00
#245
b10001000 (
b1000 ,
10
#250
00
#255
b10000111 (
b0111 ,
10
#260
00
#265
b10000110 (
b0110 ,
10
#270
00
#275
b10000101 (
b0101 ,
10
#280
00
#285
b10000100 (
b0100 ,
10
#290
00
#295
b10000011 (
b0011 ,
10
#300
00
#305
b10000010 (
b0010 ,
10
#310
00
#315
b10000001 (
b0001 ,
10
#320
00
#325
b10000000 (
b0000 ,
10
#330
1%
b0110 &
1'
00
#335
b10000001 (
b0110 ,
10
#340
0%
00
#345
b10000010 (
b0111 ,
10
#350
0$
00
#355
10
#360
00
#365
10
#370
00
#375
10
#380
1$
00
#385
b10000011 (
b1000 ,
10
#390
00
#395
b10000100 (
b1001 ,
10
#400
00
#405
b10000101 (
b1010 ,
10
#410
0#
b10000000 (
b0000 ,
00
#415
10
#420
1#
00
#425
b10000001 (
b0001 ,
10
#430
00
