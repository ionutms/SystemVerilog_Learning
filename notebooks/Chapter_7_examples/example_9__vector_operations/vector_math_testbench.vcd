$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module vector_math_testbench $end
  $var wire 48 # first_test_vector [47:0] $end
  $var wire 48 % second_test_vector [47:0] $end
  $var wire 48 ' addition_result [47:0] $end
  $var wire 16 ) array_vector_a[0] [15:0] $end
  $var wire 16 * array_vector_a[1] [15:0] $end
  $var wire 16 + array_vector_a[2] [15:0] $end
  $var wire 16 , array_vector_b[0] [15:0] $end
  $var wire 16 - array_vector_b[1] [15:0] $end
  $var wire 16 . array_vector_b[2] [15:0] $end
  $var wire 16 / scaling_result[0] [15:0] $end
  $var wire 16 0 scaling_result[1] [15:0] $end
  $var wire 16 1 scaling_result[2] [15:0] $end
  $var wire 32 2 dot_product_value [31:0] $end
  $var wire 8 3 multiplication_factor [7:0] $end
  $scope module VECTOR_CALC_INSTANCE $end
   $var wire 48 4 add_vectors_packed__Vstatic__result_vector [47:0] $end
   $var wire 16 6 scale_vector_array__Vstatic__scaled_result[0] [15:0] $end
   $var wire 16 7 scale_vector_array__Vstatic__scaled_result[1] [15:0] $end
   $var wire 16 8 scale_vector_array__Vstatic__scaled_result[2] [15:0] $end
   $var wire 32 9 compute_dot_product__Vstatic__dot_product_result [31:0] $end
   $var wire 16 : packed_to_array_converter__Vstatic__array_result[0] [15:0] $end
   $var wire 16 ; packed_to_array_converter__Vstatic__array_result[1] [15:0] $end
   $var wire 16 < packed_to_array_converter__Vstatic__array_result[2] [15:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b000000000000101000000000000101000000000000011110 #
b000000000000010100000000000011110000000000011001 %
b000000000000111100000000001000110000000000110111 '
b0000000000001010 )
b0000000000010100 *
b0000000000011110 +
b0000000000000010 ,
b0000000000000011 -
b0000000000000100 .
b0000000000001100 /
b0000000000010010 0
b0000000000011000 1
b00000000000000000000000000111010 2
b00000011 3
b000000000000111100000000001000110000000000110111 4
b0000000000001100 6
b0000000000010010 7
b0000000000011000 8
b00000000000000000000000000111010 9
b0000000000001010 :
b0000000000010100 ;
b0000000000011110 <
#10
