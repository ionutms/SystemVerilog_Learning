$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module crc_calculator_testbench_module $end
  $var wire 1 ' clock_signal_tb $end
  $var wire 1 ( reset_active_low_tb $end
  $var wire 1 ) data_valid_input_tb $end
  $var wire 8 * data_byte_input_tb [7:0] $end
  $var wire 8 + crc_checksum_output_tb [7:0] $end
  $var wire 1 , crc_calculation_complete_tb $end
  $var wire 8 # test_data_array[0] [7:0] $end
  $var wire 8 $ test_data_array[1] [7:0] $end
  $var wire 8 % test_data_array[2] [7:0] $end
  $var wire 8 & test_data_array[3] [7:0] $end
  $var wire 32 - data_index_counter [31:0] $end
  $scope module CRC_CALCULATOR_INSTANCE $end
   $var wire 1 ' clock_signal $end
   $var wire 1 ( reset_active_low $end
   $var wire 1 ) data_valid_input $end
   $var wire 8 * data_byte_input [7:0] $end
   $var wire 8 + crc_checksum_output [7:0] $end
   $var wire 1 , crc_calculation_complete $end
   $var wire 8 1 CRC_POLYNOMIAL_CONSTANT [7:0] $end
   $var wire 8 + crc_register_current [7:0] $end
   $var wire 8 . crc_register_next [7:0] $end
   $var wire 1 / calculation_in_progress $end
   $scope module unnamedblk1 $end
    $var wire 32 0 bit_position [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b10101011 #
b11001101 $
b11101111 %
b00010010 &
0'
1(
0)
b00000000 *
b00000000 +
0,
b00000000000000000000000000000000 -
b00000000 .
0/
b00000000000000000000000000000000 0
b00000111 1
#5
1'
#10
0'
0(
#15
1'
#20
0'
#25
1'
#30
0'
1(
#35
1'
#40
0'
1)
b10101011 *
b01011000 .
b00000000000000000000000000001000 0
#45
1'
b01011000 +
b11010111 .
1/
#50
0'
0)
b01011000 .
#55
1'
1,
0/
#60
0'
#65
1'
1)
b11001101 *
b11100010 +
0,
b00000000000000000000000000000001 -
b11001101 .
1/
#70
0'
#75
1'
0)
1,
b11100010 .
0/
#80
0'
#85
1'
0,
#90
0'
1)
b11101111 *
b00000000000000000000000000000010 -
b00100011 .
#95
1'
b00100011 +
b01101010 .
1/
#100
0'
0)
b00100011 .
#105
1'
1,
0/
#110
0'
#115
1'
1)
b00010010 *
b10010111 +
0,
b00000000000000000000000000000011 -
b10010010 .
1/
#120
0'
#125
1'
0)
1,
b10010111 .
0/
#130
0'
#135
1'
0,
#140
0'
b00000000000000000000000000000100 -
#145
1'
#150
0'
0(
b00000000 +
b00000000 .
#155
1'
#160
0'
1(
#165
1'
#170
0'
#175
1'
#180
0'
#185
1'
#190
0'
#195
1'
#200
0'
#205
1'
#210
0'
#215
1'
#220
0'
