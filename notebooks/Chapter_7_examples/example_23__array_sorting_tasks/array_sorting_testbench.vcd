$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module array_sorting_testbench $end
  $var wire 32 # random_numbers[0] [31:0] $end
  $var wire 32 $ random_numbers[1] [31:0] $end
  $var wire 32 % random_numbers[2] [31:0] $end
  $var wire 32 & random_numbers[3] [31:0] $end
  $var wire 32 ' random_numbers[4] [31:0] $end
  $var wire 32 ( random_numbers[5] [31:0] $end
  $var wire 32 ) random_numbers[6] [31:0] $end
  $var wire 32 * random_numbers[7] [31:0] $end
  $var wire 32 + mixed_values[0] [31:0] $end
  $var wire 32 , mixed_values[1] [31:0] $end
  $var wire 32 - mixed_values[2] [31:0] $end
  $var wire 32 . mixed_values[3] [31:0] $end
  $var wire 32 / mixed_values[4] [31:0] $end
  $var wire 32 0 mixed_values[5] [31:0] $end
  $var wire 32 1 duplicate_numbers[0] [31:0] $end
  $var wire 32 2 duplicate_numbers[1] [31:0] $end
  $var wire 32 3 duplicate_numbers[2] [31:0] $end
  $var wire 32 4 duplicate_numbers[3] [31:0] $end
  $var wire 32 5 duplicate_numbers[4] [31:0] $end
  $var wire 32 6 duplicate_numbers[5] [31:0] $end
  $var wire 32 7 duplicate_numbers[6] [31:0] $end
  $var wire 32 8 duplicate_numbers[7] [31:0] $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000101 #
b00000000000000000000000000001011 $
b00000000000000000000000000001100 %
b00000000000000000000000000010110 &
b00000000000000000000000000011001 '
b00000000000000000000000000100010 (
b00000000000000000000000001000000 )
b00000000000000000000000001011010 *
b00000000000000000000000011001000 +
b00000000000000000000000001100100 ,
b00000000000000000000000001001011 -
b00000000000000000000000000000000 .
b11111111111111111111111111100111 /
b11111111111111111111111111001110 0
b00000000000000000000000000000001 1
b00000000000000000000000000000010 2
b00000000000000000000000000000010 3
b00000000000000000000000000000101 4
b00000000000000000000000000000101 5
b00000000000000000000000000000101 6
b00000000000000000000000000001000 7
b00000000000000000000000000001001 8
#10
