$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module lookup_table_rom_testbench $end
  $var wire 3 + test_address [2:0] $end
  $var wire 8 . expected_data [7:0] $end
  $var wire 8 , actual_data [7:0] $end
  $scope module ROM_INSTANCE $end
   $var wire 3 + address_input [2:0] $end
   $var wire 8 , data_output [7:0] $end
   $var wire 8 # rom_memory[0] [7:0] $end
   $var wire 8 $ rom_memory[1] [7:0] $end
   $var wire 8 % rom_memory[2] [7:0] $end
   $var wire 8 & rom_memory[3] [7:0] $end
   $var wire 8 ' rom_memory[4] [7:0] $end
   $var wire 8 ( rom_memory[5] [7:0] $end
   $var wire 8 ) rom_memory[6] [7:0] $end
   $var wire 8 * rom_memory[7] [7:0] $end
  $upscope $end
  $scope module unnamedblk1 $end
   $var wire 32 - addr [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00010000 #
b00100101 $
b00111010 %
b01000111 &
b01011100 '
b01101001 (
b01111110 )
b10000011 *
b000 +
b00010000 ,
b00000000000000000000000000000000 -
b00000000 .
#1
b001 +
b00100101 ,
b00000000000000000000000000000001 -
#2
b010 +
b00111010 ,
b00000000000000000000000000000010 -
#3
b011 +
b01000111 ,
b00000000000000000000000000000011 -
#4
b100 +
b01011100 ,
b00000000000000000000000000000100 -
#5
b101 +
b01101001 ,
b00000000000000000000000000000101 -
#6
b110 +
b01111110 ,
b00000000000000000000000000000110 -
#7
b111 +
b10000011 ,
b00000000000000000000000000000111 -
#8
b000 +
b00010000 ,
b00000000000000000000000000001000 -
#9
b011 +
b01000111 ,
#10
b111 +
b10000011 ,
#11
