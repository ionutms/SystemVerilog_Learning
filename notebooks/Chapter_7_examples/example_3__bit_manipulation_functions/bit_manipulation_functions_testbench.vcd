$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module bit_manipulation_functions_testbench $end
  $var wire 32 & test_data_word [31:0] $end
  $var wire 8 ' test_input_byte [7:0] $end
  $var wire 16 ( shift_test_data [15:0] $end
  $var wire 32 ) expected_ones_count [31:0] $end
  $var wire 8 * expected_reversed_byte [7:0] $end
  $var wire 32 + expected_mask_value [31:0] $end
  $var wire 32 , expected_extracted_field [31:0] $end
  $var wire 16 - expected_shifted_result [15:0] $end
  $scope module BIT_MANIP_DUT $end
   $scope module unnamedblk4 $end
    $var wire 32 # test_word [31:0] $end
    $var wire 8 $ test_byte [7:0] $end
    $var wire 16 % rotation_data [15:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b10100101110000111111000011100001 #
b10100011 $
b1011111011101111 %
b11111111111111110000000000000000 &
b00000000 '
b0000000000000000 (
b00000000000000000000000000010000 )
b00000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b0000000000000000 -
#1
b11000011 '
b11000011 *
#2
b00000000000000000000111100000000 +
#3
b10101011110011011110111100010010 &
b00000000000000000000000011001101 ,
#4
b1111000000000000 (
b0000000000001111 -
#6
