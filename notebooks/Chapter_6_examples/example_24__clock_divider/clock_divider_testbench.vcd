$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module clock_divider_testbench $end
  $var wire 1 3 clk_in $end
  $var wire 1 4 reset_n $end
  $var wire 1 # clk_out_div2 $end
  $var wire 1 $ clk_out_div3 $end
  $var wire 1 % clk_out_div4 $end
  $var wire 1 & clk_out_div5 $end
  $var wire 32 5 div2_count [31:0] $end
  $var wire 32 6 div3_count [31:0] $end
  $var wire 32 7 div4_count [31:0] $end
  $var wire 32 8 div5_count [31:0] $end
  $scope module DIV_BY_2 $end
   $var wire 32 9 DIVIDE_RATIO [31:0] $end
   $var wire 1 3 clk_in $end
   $var wire 1 4 reset_n $end
   $var wire 1 # clk_out $end
   $var wire 1 ' counter [0:0] $end
   $var wire 1 ( divided_clock $end
   $var wire 1 ) toggle_early $end
   $var wire 32 : COUNTER_WIDTH [31:0] $end
   $var wire 1 ; MAX_COUNT [0:0] $end
   $var wire 1 ; HALF_COUNT [0:0] $end
  $upscope $end
  $scope module DIV_BY_3 $end
   $var wire 32 < DIVIDE_RATIO [31:0] $end
   $var wire 1 3 clk_in $end
   $var wire 1 4 reset_n $end
   $var wire 1 $ clk_out $end
   $var wire 2 * counter [1:0] $end
   $var wire 1 + divided_clock $end
   $var wire 1 , toggle_early $end
   $var wire 32 9 COUNTER_WIDTH [31:0] $end
   $var wire 2 = MAX_COUNT [1:0] $end
   $var wire 2 > HALF_COUNT [1:0] $end
  $upscope $end
  $scope module DIV_BY_4 $end
   $var wire 32 ? DIVIDE_RATIO [31:0] $end
   $var wire 1 3 clk_in $end
   $var wire 1 4 reset_n $end
   $var wire 1 % clk_out $end
   $var wire 2 - counter [1:0] $end
   $var wire 1 . divided_clock $end
   $var wire 1 / toggle_early $end
   $var wire 32 9 COUNTER_WIDTH [31:0] $end
   $var wire 2 @ MAX_COUNT [1:0] $end
   $var wire 2 = HALF_COUNT [1:0] $end
  $upscope $end
  $scope module DIV_BY_5 $end
   $var wire 32 A DIVIDE_RATIO [31:0] $end
   $var wire 1 3 clk_in $end
   $var wire 1 4 reset_n $end
   $var wire 1 & clk_out $end
   $var wire 3 0 counter [2:0] $end
   $var wire 1 1 divided_clock $end
   $var wire 1 2 toggle_early $end
   $var wire 32 < COUNTER_WIDTH [31:0] $end
   $var wire 3 B MAX_COUNT [2:0] $end
   $var wire 3 C HALF_COUNT [2:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
0'
0(
0)
b00 *
0+
0,
b00 -
0.
0/
b000 0
01
02
03
04
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000010 9
b00000000000000000000000000000001 :
1;
b00000000000000000000000000000011 <
b10 =
b01 >
b00000000000000000000000000000100 ?
b11 @
b00000000000000000000000000000101 A
b100 B
b010 C
#5
13
#10
03
#15
13
#20
03
14
#25
1#
1'
b01 *
b01 -
b001 0
13
b00000000000000000000000000000001 5
#30
03
#35
0#
1$
1%
0'
1(
b10 *
1,
b10 -
b010 0
13
b00000000000000000000000000000001 6
b00000000000000000000000000000001 7
#40
03
#45
1#
1&
1'
b00 *
1+
0,
b11 -
b011 0
12
13
b00000000000000000000000000000010 5
b00000000000000000000000000000001 8
#50
03
#55
0#
0%
0'
0(
b01 *
b00 -
1.
b100 0
13
#60
03
#65
1#
0$
1'
b10 *
1,
b01 -
b000 0
11
02
13
b00000000000000000000000000000011 5
#70
03
#75
0#
1%
0'
1(
b00 *
0+
0,
b10 -
b001 0
13
b00000000000000000000000000000010 7
#80
03
#85
1#
1'
b01 *
b11 -
b010 0
13
b00000000000000000000000000000100 5
#90
03
#95
0#
1$
0%
0&
0'
0(
b10 *
1,
b00 -
0.
b011 0
12
13
b00000000000000000000000000000010 6
#100
03
#105
1#
1'
b00 *
1+
0,
b01 -
b100 0
13
b00000000000000000000000000000101 5
#110
03
#115
0#
1%
0'
1(
b01 *
b10 -
b000 0
01
02
13
b00000000000000000000000000000011 7
#120
03
#125
1#
0$
1'
b10 *
1,
b11 -
b001 0
13
b00000000000000000000000000000110 5
#130
03
#135
0#
0%
0'
0(
b00 *
0+
0,
b00 -
1.
b010 0
13
#140
03
#145
1#
1&
1'
b01 *
b01 -
b011 0
12
13
b00000000000000000000000000000111 5
b00000000000000000000000000000010 8
#150
03
#155
0#
1$
1%
0'
1(
b10 *
1,
b10 -
b100 0
13
b00000000000000000000000000000011 6
b00000000000000000000000000000100 7
#160
03
#165
1#
1'
b00 *
1+
0,
b11 -
b000 0
11
02
13
b00000000000000000000000000001000 5
#170
03
#175
0#
0%
0'
0(
b01 *
b00 -
0.
b001 0
13
#180
03
#185
1#
0$
1'
b10 *
1,
b01 -
b010 0
13
b00000000000000000000000000001001 5
#190
03
#195
0#
1%
0&
0'
1(
b00 *
0+
0,
b10 -
b011 0
12
13
b00000000000000000000000000000101 7
#200
03
#205
1#
1'
b01 *
b11 -
b100 0
13
b00000000000000000000000000001010 5
#210
03
#215
0#
1$
0%
0'
0(
b10 *
1,
b00 -
1.
b000 0
01
02
13
b00000000000000000000000000000100 6
#220
03
#225
1#
1'
b00 *
1+
0,
b01 -
b001 0
13
b00000000000000000000000000001011 5
#230
03
#235
0#
1%
0'
1(
b01 *
b10 -
b010 0
13
b00000000000000000000000000000110 7
#240
03
#245
1#
0$
1&
1'
b10 *
1,
b11 -
b011 0
12
13
b00000000000000000000000000001100 5
b00000000000000000000000000000011 8
#250
03
#255
0#
0%
0'
0(
b00 *
0+
0,
b00 -
0.
b100 0
13
#260
03
#265
1#
1'
b01 *
b01 -
b000 0
11
02
13
b00000000000000000000000000001101 5
#270
03
#275
0#
1$
1%
0'
1(
b10 *
1,
b10 -
b001 0
13
b00000000000000000000000000000101 6
b00000000000000000000000000000111 7
#280
03
#285
1#
1'
b00 *
1+
0,
b11 -
b010 0
13
b00000000000000000000000000001110 5
#290
03
#295
0#
0%
0&
0'
0(
b01 *
b00 -
1.
b011 0
12
13
#300
03
#305
1#
0$
1'
b10 *
1,
b01 -
b100 0
13
b00000000000000000000000000001111 5
#310
03
#315
0#
1%
0'
1(
b00 *
0+
0,
b10 -
b000 0
01
02
13
b00000000000000000000000000001000 7
#320
03
#325
1#
1'
b01 *
b11 -
b001 0
13
b00000000000000000000000000010000 5
#330
03
#335
0#
1$
0%
0'
0(
b10 *
1,
b00 -
0.
b010 0
13
b00000000000000000000000000000110 6
#340
03
#345
1#
1&
1'
b00 *
1+
0,
b01 -
b011 0
12
13
b00000000000000000000000000010001 5
b00000000000000000000000000000100 8
#350
03
#355
0#
1%
0'
1(
b01 *
b10 -
b100 0
13
b00000000000000000000000000001001 7
#360
03
#365
1#
0$
1'
b10 *
1,
b11 -
b000 0
11
02
13
b00000000000000000000000000010010 5
#370
03
#375
0#
0%
0'
0(
b00 *
0+
0,
b00 -
1.
b001 0
13
#380
03
#385
1#
1'
b01 *
b01 -
b010 0
13
b00000000000000000000000000010011 5
#390
03
#395
0#
1$
1%
0&
0'
1(
b10 *
1,
b10 -
b011 0
12
13
b00000000000000000000000000000111 6
b00000000000000000000000000001010 7
#400
03
#405
1#
1'
b00 *
1+
0,
b11 -
b100 0
13
b00000000000000000000000000010100 5
#410
03
#415
0#
0%
0'
0(
b01 *
b00 -
0.
b000 0
01
02
13
#420
03
#425
1#
0$
1'
b10 *
1,
b01 -
b001 0
13
b00000000000000000000000000010101 5
#430
03
#435
0#
1%
0'
1(
b00 *
0+
0,
b10 -
b010 0
13
b00000000000000000000000000001011 7
#440
03
#445
1#
1&
1'
b01 *
b11 -
b011 0
12
13
b00000000000000000000000000010110 5
b00000000000000000000000000000101 8
#450
03
#455
0#
1$
0%
0'
0(
b10 *
1,
b00 -
1.
b100 0
13
b00000000000000000000000000001000 6
#460
03
#465
1#
1'
b00 *
1+
0,
b01 -
b000 0
11
02
13
b00000000000000000000000000010111 5
#470
03
#475
0#
1%
0'
1(
b01 *
b10 -
b001 0
13
b00000000000000000000000000001100 7
#480
03
#485
1#
0$
1'
b10 *
1,
b11 -
b010 0
13
b00000000000000000000000000011000 5
#490
03
#495
0#
0%
0&
0'
0(
b00 *
0+
0,
b00 -
0.
b011 0
12
13
#500
03
#505
1#
1'
b01 *
b01 -
b100 0
13
b00000000000000000000000000011001 5
#510
03
#515
0#
1$
1%
0'
1(
b10 *
1,
b10 -
b000 0
01
02
13
b00000000000000000000000000001001 6
b00000000000000000000000000001101 7
