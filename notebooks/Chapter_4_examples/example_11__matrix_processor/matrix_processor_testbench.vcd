$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module matrix_processor_testbench $end
  $scope module MATRIX_DUT $end
   $var wire 8 # matrix[0][0] [7:0] $end
   $var wire 8 $ matrix[0][1] [7:0] $end
   $var wire 8 % matrix[0][2] [7:0] $end
   $var wire 8 & matrix[0][3] [7:0] $end
   $var wire 8 ' matrix[1][0] [7:0] $end
   $var wire 8 ( matrix[1][1] [7:0] $end
   $var wire 8 ) matrix[1][2] [7:0] $end
   $var wire 8 * matrix[1][3] [7:0] $end
   $var wire 8 + matrix[2][0] [7:0] $end
   $var wire 8 , matrix[2][1] [7:0] $end
   $var wire 8 - matrix[2][2] [7:0] $end
   $var wire 8 . matrix[2][3] [7:0] $end
   $var wire 8 / matrix[3][0] [7:0] $end
   $var wire 8 0 matrix[3][1] [7:0] $end
   $var wire 8 1 matrix[3][2] [7:0] $end
   $var wire 8 2 matrix[3][3] [7:0] $end
   $var wire 8 3 row_sum[0] [7:0] $end
   $var wire 8 4 row_sum[1] [7:0] $end
   $var wire 8 5 row_sum[2] [7:0] $end
   $var wire 8 6 row_sum[3] [7:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000 #
b00000001 $
b00000010 %
b00000011 &
b00000001 '
b00000010 (
b00000011 )
b00000100 *
b00000010 +
b00000011 ,
b00000100 -
b00000101 .
b00000011 /
b00000100 0
b00000101 1
b00000110 2
b00000110 3
b00001010 4
b00001110 5
b00010010 6
#11
